 version: "3.1"
 services:
   front-end:
     build: ./front-end-demo
     ports:
       - "8080:80"
     environment:
       RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
       RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
       FLASK_ENV: ${development}
       FLASK_SECRET_KEY: ${FLASK_SECRET_KEY}
   messaging:
     image: rabbitmq:3.8.3
     environment:
       RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
       RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
       RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
     ports:
       - "15672:15672"
   db:
     image: postgres
     restart: always
     environment:
       POSTGRES_DB: ${ourDB}       
       POSTGRES_USER: ${DB_ROOT_USER}
       POSTGRES_PASSWORD: ${DB_ROOT_PAS}
     volumes:
       - "./db/:/docker-entrypoint-initdb.d"
       - "db-data:/var/lib/postgresql/data"
     adminer:
       image: adminer
       restart: always
       ports:
         - "8080:8080"      
   back-end:
     build: ./back-end-demo
   
     environment:
       NODE-ENV: ${development}
       RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

   volumes:
     data-volume:

